# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy

on:
  push:
    # branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo "A ${{ github.event_name}} triggered this run..."
      - run: echo "Checking out project from ${{ github.ref_name }}..."
      - uses: actions/checkout@v4

      - run: echo "Installing Node.js 20..."
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: echo "Installing dependencies..."
      - run: npm ci

      - run: echo "Linting project..."
      - run: npm run eslint

      - run: echo "Testing project..."
      - run: npm run test

      - run: echo "Building project..."
      - run: npm run build --if-present
        env:
          MOVIE_API_KEY: ${{ secrets.MOVIE_API_KEY }}
          MOVIE_ID: ${{ secrets.MOVIE_ID }}
          NASA_API_KEY: ${{ secrets.NASA_API_KEY }}

      - run: echo "Deploying to Netlify..."
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          production-branch: ${{ github.ref_name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          functions-dir: './edge-functions'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      # - name: Globall install Netlify CLI
      #   run: npm install -g netlify-cli
      # - name: Link site to Netlify using CLI
      #   run: netlify link --id ${{ secrets.NETLIFY_SITE_ID }}
      # - name: Deploy to Netlify using CLI
      #   run: netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --dir dist --prod
